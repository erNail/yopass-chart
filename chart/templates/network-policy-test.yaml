---
suite: "network policy template"
templates:
  - "network-policy.yaml"
tests:
  - it: "should not render network policy if disabled"
    set:
      networkPolicy:
        enabled: false
    asserts:
      - notExists:
          path: "spec"

  - it: "should render network policy if enabled"
    set:
      networkPolicy:
        enabled: true
    asserts:
      - isKind:
          of: "NetworkPolicy"

  - it: "should render apiVersion with default value"
    set:
      networkPolicy:
        enabled: true
    asserts:
      - equal:
          path: "apiVersion"
          value: "networking.k8s.io/v1"

  - it: "should render apiVersion as set"
    set:
      networkPolicy:
        enabled: true
      apiVersions:
        networkPolicy: "networking.k8s.io/v1beta1"
    asserts:
      - equal:
          path: "apiVersion"
          value: "networking.k8s.io/v1beta1"

  - it: "should not render annotations if not set"
    set:
      networkPolicy:
        enabled: true
        annotations: null
    asserts:
      - notExists:
          path: "metadata.annotations"

  - it: "should render annotations as set"
    set:
      networkPolicy:
        enabled: true
        annotations:
          example.com/annotation: "value"
    asserts:
      - equal:
          path: "metadata.annotations"
          value:
            example.com/annotation: "value"

  - it: "should render egress rules that allow all traffic if enabled"
    set:
      networkPolicy:
        enabled: true
        egress:
          allowAll: true
    asserts:
      - equal:
          path: "spec.egress"
          value:
            - {}

  - it: "should render egress rules with default value"
    set:
      networkPolicy:
        enabled: true
    asserts:
      - equal:
          path: "spec.egress"
          value:
            - ports:
              - port: 53
                protocol: "TCP"
              - port: 53
                protocol: "UDP"

  - it: "should render extra egress rules as set"
    set:
      networkPolicy:
        enabled: true
        egress:
          extraRules:
            - ports:
                - port: 80
                  protocol: "TCP"
    asserts:
      - equal:
          path: "spec.egress"
          value:
            - ports:
              - port: 53
                protocol: "TCP"
              - port: 53
                protocol: "UDP"
            - ports:
                - port: 80
                  protocol: "TCP"

  - it: "should render ingress rules that allow all traffic in enabled"
    set:
      networkPolicy:
        enabled: true
        ingress:
          allowAll: true
    asserts:
      - equal:
          path: "spec.ingress"
          value:
            - {}

  - it: "should render no ingress rules if ingress resource, metrics and extraRules are disabled"
    set:
      networkPolicy:
        enabled: true
    asserts:
      - equal:
          path: "spec.ingress"
          value: null

  - it: "should render ingress rules for ingress controller with default value"
    set:
      networkPolicy:
        enabled: true
      ingress:
        enabled: true
    asserts:
      - equal:
          path: "spec.ingress"
          value:
            - ports:
                - port: "http"
                  protocol: "TCP"
              from:
                - namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: "ingress"
                  podSelector:
                    matchLabels:
                      app.kubernetes.io/name: "ingress-nginx"

  - it: "should render ingress rules for ingress controller as set"
    set:
      ingress:
        enabled: true
      networkPolicy:
        enabled: true
        ingress:
          ingressController:
            containerPorts:
              - "http"
              - "https"
            from:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: "ingress"
                podSelector:
                  matchLabels:
                    app.kubernetes.io/name: "ingress-nginx"
    asserts:
      - equal:
          path: "spec.ingress"
          value:
            - ports:
                - port: "http"
                  protocol: "TCP"
                - port: "https"
                  protocol: "TCP"
              from:
                - namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: "ingress"
                  podSelector:
                    matchLabels:
                      app.kubernetes.io/name: "ingress-nginx"

  - it: "should render ingress rules for metrics scraper with default value"
    set:
      networkPolicy:
        enabled: true
      metrics:
        enabled: true
    asserts:
      - equal:
          path: "spec.ingress"
          value:
            - ports:
                - port: "metrics"
                  protocol: "TCP"
              from:
                - namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: "kube-prometheus-stack"
                  podSelector:
                    matchLabels:
                      app.kubernetes.io/name: "kube-prometheus-stack-prometheus-operator"

  - it: "should render ingress rules for metrics scraper as set"
    set:
      metrics:
        enabled: true
        service:
          ports:
            - name: "portName"
              port: 8080
              targetPort: "targetPortName"
              protocol: "TCP"
            - name: "metrics"
              port: 9090
              targetPort: "metrics"
              protocol: "TCP"
      networkPolicy:
        enabled: true
        ingress:
          metricsScraper:
            from:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: "custom"
                podSelector:
                  matchLabels:
                    app.kubernetes.io/name: "custom"
    asserts:
      - equal:
          path: "spec.ingress"
          value:
            - ports:
                - port: "targetPortName"
                  protocol: "TCP"
                - port: "metrics"
                  protocol: "TCP"
              from:
                - namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: "custom"
                  podSelector:
                    matchLabels:
                      app.kubernetes.io/name: "custom"

  - it: "should render extra ingress rules as set"
    set:
      networkPolicy:
        enabled: true
        ingress:
          extraRules:
            - ports:
                - port: 8080
                  protocol: "TCP"
    asserts:
      - equal:
          path: "spec.ingress"
          value:
            - ports:
              - port: 8080
                protocol: "TCP"
...
